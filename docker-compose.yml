services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./php/src:/var/www/html
      - ./uploads:/var/www/html/public/uploads
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - php-app
    networks:
      - cloud-library
    restart: unless-stopped

  php-app:
    build:
      context: ./php
      args:
        UID: 1000
        GID: 1000
    volumes:
      - ./php/src:/var/www/html
      - ./uploads:/var/www/html/public/uploads
    environment:
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cloud-library
    restart: unless-stopped



  postgres:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cloud-library
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  cloud-library:
    driver: bridge
